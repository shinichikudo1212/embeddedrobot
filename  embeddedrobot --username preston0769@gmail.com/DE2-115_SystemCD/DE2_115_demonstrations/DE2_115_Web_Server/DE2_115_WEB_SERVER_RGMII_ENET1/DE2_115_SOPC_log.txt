Altera SOPC Builder Version 10.00 Build 218
Copyright (c) 1999-2009 Altera Corporation.  All rights reserved.


No .sopc_builder configuration file(!)
# 2010.07.07 16:49:42 (*) mk_custom_sdk starting
# 2010.07.07 16:49:42 (*) Reading project E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/DE2_115_SOPC.ptf.

# 2010.07.07 16:49:43 (*) Finding all CPUs
# 2010.07.07 16:49:43 (*) Finding all available components
# 2010.07.07 16:49:43 (*) Reading E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/.sopc_builder/install.ptf

# 2010.07.07 16:49:43 (*) Found 67 components

# 2010.07.07 16:49:44 (*) Finding all peripherals

# 2010.07.07 16:49:44 (*) Finding software components

# 2010.07.07 16:49:45 (*) (Legacy SDK Generation Skipped)
# 2010.07.07 16:49:45 (*) (All TCL Script Generation Skipped)
# 2010.07.07 16:49:45 (*) (No Libraries Built)
# 2010.07.07 16:49:45 (*) (Contents Generation Skipped)
# 2010.07.07 16:49:45 (*) mk_custom_sdk finishing
# 2010.07.07 16:49:45 (*) Starting generation for system: DE2_115_SOPC.

.
.
.
..
.
.
.
.....
...
....
.........

# 2010.07.07 16:49:47 (*) Running Generator Program for cpu

# 2010.07.07 16:49:48 (*) Starting Nios II generation
# 2010.07.07 16:49:48 (*)   Checking for plaintext license.
# 2010.07.07 16:49:53 (*)   Plaintext license not found.
# 2010.07.07 16:49:53 (*)   Checking for encrypted license (non-evaluation).
# 2010.07.07 16:49:54 (*)   Encrypted license found.  SOF will not be time-limited.
# 2010.07.07 16:49:54 (*)   Getting CPU configuration settings
# 2010.07.07 16:49:54 (*)   Elaborating CPU configuration settings
# 2010.07.07 16:49:54 (*)   Creating all objects for CPU

# 2010.07.07 16:49:54 (*)     Testbench
# 2010.07.07 16:49:55 (*)     Instruction decoding
# 2010.07.07 16:49:55 (*)       Instruction fields
# 2010.07.07 16:49:55 (*)       Instruction decodes
# 2010.07.07 16:49:56 (*)       Signals for RTL simulation waveforms
# 2010.07.07 16:49:56 (*)       Instruction controls
# 2010.07.07 16:49:56 (*)     Pipeline frontend
# 2010.07.07 16:49:56 (*)     Pipeline backend
# 2010.07.07 16:50:00 (*)   Generating HDL from CPU objects
# 2010.07.07 16:50:04 (*)   Creating encrypted HDL

# 2010.07.07 16:50:06 (*) Done Nios II generation

# 2010.07.07 16:50:06 (*) Running Generator Program for sysid

# 2010.07.07 16:50:08 (*) Running Generator Program for timer

# 2010.07.07 16:50:10 (*) Running Generator Program for onchip_memory2

# 2010.07.07 16:50:12 (*) Running Generator Program for cfi_flash

# 2010.07.07 16:50:14 (*) Running Generator Program for sdram

# 2010.07.07 16:50:16 (*) Running Generator Program for key

# 2010.07.07 16:50:18 (*) Running Generator Program for sma_in

# 2010.07.07 16:50:19 (*) Running Generator Program for sma_out

# 2010.07.07 16:50:21 (*) Running Generator Program for sw

# 2010.07.07 16:50:23 (*) Running Generator Program for ledg

# 2010.07.07 16:50:25 (*) Running Generator Program for ledr

# 2010.07.07 16:50:27 (*) Running Generator Program for rs232

# 2010.07.07 16:50:29 (*) Running Generator Program for i2c_scl

# 2010.07.07 16:50:31 (*) Running Generator Program for i2c_sda

# 2010.07.07 16:50:32 (*) Running Generator Program for eep_i2c_scl

# 2010.07.07 16:50:34 (*) Running Generator Program for eep_i2c_sda

# 2010.07.07 16:50:36 (*) Running Generator Program for lcd

# 2010.07.07 16:50:38 (*) Running Generator Program for ir

# 2010.07.07 16:50:39 (*) Running Generator Program for jtag_uart

# 2010.07.07 16:50:41 (*) Running Generator Program for sd_clk

# 2010.07.07 16:50:43 (*) Running Generator Program for sd_cmd

# 2010.07.07 16:50:45 (*) Running Generator Program for sd_dat

# 2010.07.07 16:50:47 (*) Running Generator Program for sd_wp_n

# 2010.07.07 16:50:48 (*) Running Generator Program for sgdma_tx

# 2010.07.07 16:50:51 (*) Running Generator Program for sgdma_rx

# 2010.07.07 16:50:54 (*) Running Generator Program for descriptor_memory

# 2010.07.07 16:50:56 (*) Running Generator Program for DE2_115_SOPC_clock_0

# 2010.07.07 16:50:58 (*) Running Generator Program for clock_crossing_io

.

# 2010.07.07 16:51:00 (*) Running Test Generator Program for sdram

# 2010.07.07 16:51:01 (*) Making arbitration and system (top) modules.

# 2010.07.07 16:51:25 (*) Generating Quartus symbol for top level: DE2_115_SOPC

# 2010.07.07 16:51:25 (*) Symbol E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/DE2_115_SOPC.bsf already exists, no need to regenerate
# 2010.07.07 16:51:25 (*) Creating command-line system-generation script: E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/DE2_115_SOPC_generation_script

# 2010.07.07 16:51:25 (*) Running setup for HDL simulator: modelsim


# 2010.07.07 16:51:26 (*) Completed generation for system: DE2_115_SOPC.
# 2010.07.07 16:51:26 (*) THE FOLLOWING SYSTEM ITEMS HAVE BEEN GENERATED:
  SOPC Builder database : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/DE2_115_SOPC.ptf 
  System HDL Model : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/DE2_115_SOPC.v 
  System Generation Script : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET1/DE2_115_SOPC_generation_script 


# 2010.07.07 16:51:26 (*) SUCCESS: SYSTEM GENERATION COMPLETED.


Press 'Exit' to exit.
