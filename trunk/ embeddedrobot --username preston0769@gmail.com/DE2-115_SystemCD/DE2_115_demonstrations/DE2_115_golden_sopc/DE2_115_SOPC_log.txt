Altera SOPC Builder Version 10.00 Build 218
Copyright (c) 1999-2009 Altera Corporation.  All rights reserved.


No .sopc_builder configuration file(!)
# 2010.07.07 19:04:09 (*) mk_custom_sdk starting
# 2010.07.07 19:04:09 (*) Reading project E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/DE2_115_SOPC.ptf.

# 2010.07.07 19:04:10 (*) Finding all CPUs
# 2010.07.07 19:04:10 (*) Finding all available components

# 2010.07.07 19:04:10 (*) Reading E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/.sopc_builder/install.ptf

# 2010.07.07 19:04:10 (*) Found 67 components

# 2010.07.07 19:04:11 (*) Finding all peripherals

# 2010.07.07 19:04:11 (*) Finding software components

# 2010.07.07 19:04:12 (*) (Legacy SDK Generation Skipped)
# 2010.07.07 19:04:12 (*) (All TCL Script Generation Skipped)
# 2010.07.07 19:04:12 (*) (No Libraries Built)
# 2010.07.07 19:04:12 (*) (Contents Generation Skipped)
# 2010.07.07 19:04:12 (*) mk_custom_sdk finishing
# 2010.07.07 19:04:12 (*) Starting generation for system: DE2_115_SOPC.

..
.
..
.
.
......
..
....
.
......

# 2010.07.07 19:04:14 (*) Running Generator Program for cpu

# 2010.07.07 19:04:15 (*) Starting Nios II generation
# 2010.07.07 19:04:15 (*)   Checking for plaintext license.
# 2010.07.07 19:04:17 (*)   Plaintext license not found.
# 2010.07.07 19:04:17 (*)   Checking for encrypted license (non-evaluation).
# 2010.07.07 19:04:18 (*)   Encrypted license found.  SOF will not be time-limited.
# 2010.07.07 19:04:18 (*)   Getting CPU configuration settings
# 2010.07.07 19:04:18 (*)   Elaborating CPU configuration settings
# 2010.07.07 19:04:18 (*)   Creating all objects for CPU

# 2010.07.07 19:04:18 (*)     Testbench
# 2010.07.07 19:04:19 (*)     Instruction decoding
# 2010.07.07 19:04:19 (*)       Instruction fields
# 2010.07.07 19:04:19 (*)       Instruction decodes
# 2010.07.07 19:04:20 (*)       Signals for RTL simulation waveforms
# 2010.07.07 19:04:20 (*)       Instruction controls
# 2010.07.07 19:04:20 (*)     Pipeline frontend
# 2010.07.07 19:04:20 (*)     Pipeline backend
# 2010.07.07 19:04:25 (*)   Generating HDL from CPU objects
# 2010.07.07 19:04:29 (*)   Creating encrypted HDL

# 2010.07.07 19:04:31 (*) Done Nios II generation

# 2010.07.07 19:04:31 (*) Running Generator Program for sysid

# 2010.07.07 19:04:33 (*) Running Generator Program for timer

# 2010.07.07 19:04:34 (*) Running Generator Program for onchip_memory2

# 2010.07.07 19:04:38 (*) Running Generator Program for cfi_flash

# 2010.07.07 19:04:39 (*) Running Generator Program for sdram

# 2010.07.07 19:04:41 (*) Running Generator Program for key

# 2010.07.07 19:04:42 (*) Running Generator Program for sma_in

# 2010.07.07 19:04:44 (*) Running Generator Program for sma_out

# 2010.07.07 19:04:45 (*) Running Generator Program for sw

# 2010.07.07 19:04:47 (*) Running Generator Program for ledg

# 2010.07.07 19:04:49 (*) Running Generator Program for ledr

# 2010.07.07 19:04:50 (*) Running Generator Program for rs232

# 2010.07.07 19:04:52 (*) Running Generator Program for i2c_scl

# 2010.07.07 19:04:54 (*) Running Generator Program for i2c_sda

# 2010.07.07 19:04:55 (*) Running Generator Program for eep_i2c_scl

# 2010.07.07 19:04:57 (*) Running Generator Program for eep_i2c_sda

# 2010.07.07 19:04:59 (*) Running Generator Program for lcd

# 2010.07.07 19:05:00 (*) Running Generator Program for jtag_uart

# 2010.07.07 19:05:02 (*) Running Generator Program for sd_clk

# 2010.07.07 19:05:03 (*) Running Generator Program for sd_cmd

# 2010.07.07 19:05:05 (*) Running Generator Program for sd_dat

# 2010.07.07 19:05:07 (*) Running Generator Program for sd_wp_n

# 2010.07.07 19:05:08 (*) Running Generator Program for DE2_115_SOPC_clock_0

# 2010.07.07 19:05:10 (*) Running Generator Program for DE2_115_SOPC_clock_1

# 2010.07.07 19:05:12 (*) Running Generator Program for clock_crossing_io

.


# 2010.07.07 19:05:14 (*) Running Test Generator Program for sdram

# 2010.07.07 19:05:15 (*) Making arbitration and system (top) modules.

# 2010.07.07 19:05:35 (*) Generating Quartus symbol for top level: DE2_115_SOPC

# 2010.07.07 19:05:36 (*) Symbol E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/DE2_115_SOPC.bsf already exists, no need to regenerate
# 2010.07.07 19:05:36 (*) Creating command-line system-generation script: E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/DE2_115_SOPC_generation_script

# 2010.07.07 19:05:36 (*) Running setup for HDL simulator: modelsim


# 2010.07.07 19:05:37 (*) Completed generation for system: DE2_115_SOPC.
# 2010.07.07 19:05:37 (*) THE FOLLOWING SYSTEM ITEMS HAVE BEEN GENERATED:
  SOPC Builder database : E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/DE2_115_SOPC.ptf 
  System HDL Model : E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/DE2_115_SOPC.v 
  System Generation Script : E:/SVN/DE2_115/trunk/test/de2_115_golden_sopc/DE2_115_SOPC_generation_script 

# 2010.07.07 19:05:37 (*) SUCCESS: SYSTEM GENERATION COMPLETED.


Press 'Exit' to exit.
