Altera SOPC Builder Version 10.00 Build 218
Copyright (c) 1999-2009 Altera Corporation.  All rights reserved.


No .sopc_builder configuration file(!)
# 2010.07.07 16:08:59 (*) mk_custom_sdk starting
# 2010.07.07 16:08:59 (*) Reading project E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/DE2_115_SOPC.ptf.

# 2010.07.07 16:09:00 (*) Finding all CPUs
# 2010.07.07 16:09:00 (*) Finding all available components
# 2010.07.07 16:09:00 (*) Reading E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/.sopc_builder/install.ptf

# 2010.07.07 16:09:00 (*) Found 67 components

# 2010.07.07 16:09:00 (*) Finding all peripherals

# 2010.07.07 16:09:00 (*) Finding software components

# 2010.07.07 16:09:01 (*) (Legacy SDK Generation Skipped)
# 2010.07.07 16:09:01 (*) (All TCL Script Generation Skipped)
# 2010.07.07 16:09:01 (*) (No Libraries Built)
# 2010.07.07 16:09:01 (*) (Contents Generation Skipped)
# 2010.07.07 16:09:01 (*) mk_custom_sdk finishing

# 2010.07.07 16:09:01 (*) Starting generation for system: DE2_115_SOPC.

.
.
.
..
.
.
......
.......
........
.

# 2010.07.07 16:09:03 (*) Running Generator Program for cpu

# 2010.07.07 16:09:05 (*) Starting Nios II generation
# 2010.07.07 16:09:05 (*)   Checking for plaintext license.
# 2010.07.07 16:09:09 (*)   Plaintext license not found.
# 2010.07.07 16:09:09 (*)   Checking for encrypted license (non-evaluation).
# 2010.07.07 16:09:10 (*)   Encrypted license found.  SOF will not be time-limited.
# 2010.07.07 16:09:10 (*)   Getting CPU configuration settings
# 2010.07.07 16:09:10 (*)   Elaborating CPU configuration settings
# 2010.07.07 16:09:11 (*)   Creating all objects for CPU

# 2010.07.07 16:09:11 (*)     Testbench
# 2010.07.07 16:09:11 (*)     Instruction decoding
# 2010.07.07 16:09:11 (*)       Instruction fields
# 2010.07.07 16:09:11 (*)       Instruction decodes
# 2010.07.07 16:09:12 (*)       Signals for RTL simulation waveforms
# 2010.07.07 16:09:12 (*)       Instruction controls
# 2010.07.07 16:09:12 (*)     Pipeline frontend
# 2010.07.07 16:09:12 (*)     Pipeline backend
# 2010.07.07 16:09:16 (*)   Generating HDL from CPU objects
# 2010.07.07 16:09:20 (*)   Creating encrypted HDL

# 2010.07.07 16:09:22 (*) Done Nios II generation

# 2010.07.07 16:09:22 (*) Running Generator Program for sysid

# 2010.07.07 16:09:24 (*) Running Generator Program for timer

# 2010.07.07 16:09:26 (*) Running Generator Program for onchip_memory2

# 2010.07.07 16:09:29 (*) Running Generator Program for cfi_flash

# 2010.07.07 16:09:30 (*) Running Generator Program for sdram

# 2010.07.07 16:09:32 (*) Running Generator Program for key

# 2010.07.07 16:09:34 (*) Running Generator Program for sma_in

# 2010.07.07 16:09:36 (*) Running Generator Program for sma_out

# 2010.07.07 16:09:38 (*) Running Generator Program for sw

# 2010.07.07 16:09:40 (*) Running Generator Program for ledg

# 2010.07.07 16:09:42 (*) Running Generator Program for ledr

# 2010.07.07 16:09:44 (*) Running Generator Program for rs232

# 2010.07.07 16:09:46 (*) Running Generator Program for i2c_scl

# 2010.07.07 16:09:47 (*) Running Generator Program for i2c_sda

# 2010.07.07 16:09:49 (*) Running Generator Program for eep_i2c_scl

# 2010.07.07 16:09:51 (*) Running Generator Program for eep_i2c_sda

# 2010.07.07 16:09:53 (*) Running Generator Program for lcd

# 2010.07.07 16:09:54 (*) Running Generator Program for ir

# 2010.07.07 16:09:56 (*) Running Generator Program for jtag_uart

# 2010.07.07 16:09:58 (*) Running Generator Program for sd_clk

# 2010.07.07 16:10:00 (*) Running Generator Program for sd_cmd

# 2010.07.07 16:10:01 (*) Running Generator Program for sd_dat

# 2010.07.07 16:10:03 (*) Running Generator Program for sd_wp_n

# 2010.07.07 16:10:05 (*) Running Generator Program for sgdma_tx

# 2010.07.07 16:10:08 (*) Running Generator Program for sgdma_rx

# 2010.07.07 16:10:10 (*) Running Generator Program for descriptor_memory

# 2010.07.07 16:10:12 (*) Running Generator Program for DE2_115_SOPC_clock_0

# 2010.07.07 16:10:14 (*) Running Generator Program for clock_crossing_io

.

# 2010.07.07 16:10:16 (*) Running Test Generator Program for sdram

# 2010.07.07 16:10:17 (*) Making arbitration and system (top) modules.

# 2010.07.07 16:10:39 (*) Generating Quartus symbol for top level: DE2_115_SOPC

# 2010.07.07 16:10:40 (*) Symbol E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/DE2_115_SOPC.bsf already exists, no need to regenerate
# 2010.07.07 16:10:40 (*) Creating command-line system-generation script: E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/DE2_115_SOPC_generation_script

# 2010.07.07 16:10:40 (*) Running setup for HDL simulator: modelsim


# 2010.07.07 16:10:41 (*) Completed generation for system: DE2_115_SOPC.
# 2010.07.07 16:10:41 (*) THE FOLLOWING SYSTEM ITEMS HAVE BEEN GENERATED:
  SOPC Builder database : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/DE2_115_SOPC.ptf 
  System HDL Model : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/DE2_115_SOPC.v 
  System Generation Script : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_RGMII_ENET0/DE2_115_SOPC_generation_script 


# 2010.07.07 16:10:41 (*) SUCCESS: SYSTEM GENERATION COMPLETED.


Press 'Exit' to exit.
