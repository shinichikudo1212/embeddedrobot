Altera SOPC Builder Version 10.00 Build 218
Copyright (c) 1999-2009 Altera Corporation.  All rights reserved.


No .sopc_builder configuration file(!)
# 2010.07.07 14:06:46 (*) mk_custom_sdk starting
# 2010.07.07 14:06:46 (*) Reading project E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/DE2_115_SOPC.ptf.

# 2010.07.07 14:06:46 (*) Finding all CPUs
# 2010.07.07 14:06:46 (*) Finding all available components

# 2010.07.07 14:06:46 (*) Reading E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/.sopc_builder/install.ptf

# 2010.07.07 14:06:46 (*) Found 67 components

# 2010.07.07 14:06:47 (*) Finding all peripherals

# 2010.07.07 14:06:47 (*) Finding software components

# 2010.07.07 14:06:48 (*) (Legacy SDK Generation Skipped)
# 2010.07.07 14:06:48 (*) (All TCL Script Generation Skipped)
# 2010.07.07 14:06:48 (*) (No Libraries Built)
# 2010.07.07 14:06:48 (*) (Contents Generation Skipped)
# 2010.07.07 14:06:48 (*) mk_custom_sdk finishing

# 2010.07.07 14:06:48 (*) Starting generation for system: DE2_115_SOPC.

..
.
..
.
.
....
..
..
...
..
.
.
.......

# 2010.07.07 14:06:50 (*) Running Generator Program for cpu

# 2010.07.07 14:06:51 (*) Starting Nios II generation
# 2010.07.07 14:06:52 (*)   Checking for plaintext license.
# 2010.07.07 14:06:56 (*)   Plaintext license not found.
# 2010.07.07 14:06:56 (*)   Checking for encrypted license (non-evaluation).
# 2010.07.07 14:06:58 (*)   Encrypted license found.  SOF will not be time-limited.
# 2010.07.07 14:06:58 (*)   Getting CPU configuration settings
# 2010.07.07 14:06:58 (*)   Elaborating CPU configuration settings
# 2010.07.07 14:06:58 (*)   Creating all objects for CPU

# 2010.07.07 14:06:58 (*)     Testbench
# 2010.07.07 14:06:58 (*)     Instruction decoding
# 2010.07.07 14:06:58 (*)       Instruction fields
# 2010.07.07 14:06:58 (*)       Instruction decodes
# 2010.07.07 14:06:59 (*)       Signals for RTL simulation waveforms
# 2010.07.07 14:06:59 (*)       Instruction controls
# 2010.07.07 14:06:59 (*)     Pipeline frontend
# 2010.07.07 14:06:59 (*)     Pipeline backend
# 2010.07.07 14:07:03 (*)   Generating HDL from CPU objects
# 2010.07.07 14:07:07 (*)   Creating encrypted HDL

# 2010.07.07 14:07:09 (*) Done Nios II generation

# 2010.07.07 14:07:10 (*) Running Generator Program for sysid

# 2010.07.07 14:07:11 (*) Running Generator Program for timer

# 2010.07.07 14:07:13 (*) Running Generator Program for onchip_memory2

# 2010.07.07 14:07:16 (*) Running Generator Program for cfi_flash

# 2010.07.07 14:07:17 (*) Running Generator Program for sdram

# 2010.07.07 14:07:19 (*) Running Generator Program for key

# 2010.07.07 14:07:21 (*) Running Generator Program for sma_in

# 2010.07.07 14:07:23 (*) Running Generator Program for sma_out

# 2010.07.07 14:07:25 (*) Running Generator Program for sw

# 2010.07.07 14:07:27 (*) Running Generator Program for ledg

# 2010.07.07 14:07:28 (*) Running Generator Program for ledr

# 2010.07.07 14:07:30 (*) Running Generator Program for rs232

# 2010.07.07 14:07:32 (*) Running Generator Program for i2c_scl

# 2010.07.07 14:07:34 (*) Running Generator Program for i2c_sda

# 2010.07.07 14:07:36 (*) Running Generator Program for eep_i2c_scl

# 2010.07.07 14:07:38 (*) Running Generator Program for eep_i2c_sda

# 2010.07.07 14:07:40 (*) Running Generator Program for lcd

# 2010.07.07 14:07:42 (*) Running Generator Program for ir

# 2010.07.07 14:07:43 (*) Running Generator Program for jtag_uart

# 2010.07.07 14:07:45 (*) Running Generator Program for sd_clk

# 2010.07.07 14:07:47 (*) Running Generator Program for sd_cmd

# 2010.07.07 14:07:49 (*) Running Generator Program for sd_dat

# 2010.07.07 14:07:51 (*) Running Generator Program for sd_wp_n

# 2010.07.07 14:07:52 (*) Running Generator Program for sgdma_tx

# 2010.07.07 14:07:55 (*) Running Generator Program for sgdma_rx

# 2010.07.07 14:07:58 (*) Running Generator Program for descriptor_memory

# 2010.07.07 14:08:00 (*) Running Generator Program for DE2_115_SOPC_clock_0

# 2010.07.07 14:08:02 (*) Running Generator Program for clock_crossing_io

.


# 2010.07.07 14:08:04 (*) Running Test Generator Program for sdram

# 2010.07.07 14:08:05 (*) Making arbitration and system (top) modules.

# 2010.07.07 14:08:28 (*) Generating Quartus symbol for top level: DE2_115_SOPC

# 2010.07.07 14:08:28 (*) Symbol E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/DE2_115_SOPC.bsf already exists, no need to regenerate
# 2010.07.07 14:08:28 (*) Creating command-line system-generation script: E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/DE2_115_SOPC_generation_script

# 2010.07.07 14:08:28 (*) Running setup for HDL simulator: modelsim


# 2010.07.07 14:08:29 (*) Completed generation for system: DE2_115_SOPC.
# 2010.07.07 14:08:29 (*) THE FOLLOWING SYSTEM ITEMS HAVE BEEN GENERATED:
  SOPC Builder database : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/DE2_115_SOPC.ptf 
  System HDL Model : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/DE2_115_SOPC.v 
  System Generation Script : E:/SVN/DE2_115/trunk/ref_design/DE2_115_Web_Server/DE2_115_WEB_SERVER_MII_ENET0/DE2_115_SOPC_generation_script 


# 2010.07.07 14:08:29 (*) SUCCESS: SYSTEM GENERATION COMPLETED.


Press 'Exit' to exit.
